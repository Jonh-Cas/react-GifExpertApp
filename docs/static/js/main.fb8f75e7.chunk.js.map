{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","guarda","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGits","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAqCeA,EAlCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAiBrC,OAEI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAM,OAAMP,GAAN,mBAAqBO,OACzCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAAAP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCUhBG,EAjBD,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEHC,EAFG,iDAE6CC,UAAUH,GAFvD,+DAGeI,MAAMF,GAHrB,cAGHG,EAHG,gBAIcA,EAAUC,OAJxB,uBAIDC,EAJC,EAIDA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjC,kBAcFM,GAdE,4CAAH,sDCYCO,EAXK,SAAC,GAAwB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAE9B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QC2BDO,EA7BQ,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA2BxC,OApBAC,qBAAW,WAGPxB,EAASC,GACJwB,MAAM,SAAAC,GAECH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAS1B,CAACpB,IAGGqB,EDvByBK,CAAa1B,GAAjCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oDAAd,SAAoEhB,IAEnEoB,GAAW,mBAAGJ,UAAU,wCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAIQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEatBgB,G,MA7BM,WAAO,IAAD,EAGazC,mBAAS,CAAC,kBAHvB,mBAGhB0C,EAHgB,KAGJ3C,EAHI,KAUvB,OACI,qCACG,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEC,6BACK2C,EAAWnB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEIA,SAAUA,GADLA,aCnB7B6B,IAASC,OAAQ,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.fb8f75e7.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = e =>{\r\n        setinputValue(e.target.value);\r\n    }\r\n    \r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault(); \r\n        \r\n        if(inputValue.trim().length > 2){\r\n        setCategories(guarda => [ inputValue, ...guarda]);\r\n        setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit} >\r\n            <input \r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}  \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n const getGifs = async (category) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=EQqcWEXkSl9dtHl2SsrJCLsmsXuKI7Lh`;\r\n        const respuesta = await fetch(url);\r\n        const { data } = await respuesta.json();\r\n\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return gifs;\r\n}\r\n\r\nexport default getGifs;\r\n\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ( {id, title, url } ) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn' >\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GifGridItem;","import React from 'react'\r\nimport {useFetchGits} from \"../hooks/useFetchGifs\";\r\n// import  GetGifs  from '../helpers/GetGifs';\r\nimport  GifGridItem  from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading } = useFetchGits(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className='card animate__animated animate__fadeInBottomRight' >{category}</h3>\r\n\r\n            {loading && <p className='card animate__animated animate__flash'>Loading</p> }\r\n\r\n            <div className='card-grid' >\r\n\r\n\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default GifGrid;\r\n","import {useEffect, useState} from 'react'\r\nimport getGifs from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGits = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect (()=>{\r\n        \r\n        \r\n        getGifs( category )\r\n            .then( imgs =>{\r\n                    \r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false,\r\n\r\n                    });\r\n\r\n            })\r\n\r\n  \r\n\r\n\r\n    }, [category]);\r\n\r\n\r\n    return state;\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport AddCategory from './Components/AddCategory';\r\nimport GifGrid from './Components/GifGrid';\r\nimport './index.css'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['One Punch Man']);\r\n\r\n    // setCategories([...categories, 'Shingueki no kyojin'])\r\n    // const handleAdd = () => {\r\n    //     setCategories(elemento =>[...elemento, 'Shingueki no kyojin']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n           <h2>GifExpertApp</h2>\r\n           <AddCategory setCategories={setCategories} />\r\n           <hr /> \r\n\r\n            <ol>\r\n                {categories.map( category => \r\n                    <GifGrid \r\n                        key={category}\r\n                        category={category}\r\n                     />\r\n                )}\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render( <GifExpertApp /> ,document.getElementById('root') );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}